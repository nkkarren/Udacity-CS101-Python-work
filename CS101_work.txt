def triangle(n):

    if n == 1:
        return[[1]]
    
    row = [1]
    for i in range(1, n-1):
        row += [triangle(n-1)[-1][i-1] + triangle(n-1)[-1][i]]
    row += [1]
        
    
    return triangle(n-1) + row



def ordered_search(index, ranks, keyword):

    if keyword not in index:
        return None
    
    lisst = []
    for url in index[keyword]:
        lisst.append([url, ranks[url]])
                                          
    return quicksort(lisst)



def quicksort(lisst):

    if len(lisst) == 0 or len(lisst) == 1:
        return lisst
    
    #print 'lisst =', lisst
    pivot = lisst[0][1]
    #print 'pivot equals ', pivot
    
    lisst1 = []
    lisst2 = []
    for e in lisst:
        if e[1] <= pivot:
            lisst1.append(e)
        else:
            lisst2.append(e)
            
    return quicksort(lisst2) + quicksort(lisst1)



def lucky_search(index, ranks, keyword):
    
    if keyword not in index:
        return None
    
    candidate = index[keyword][0]
    for url in index[keyword]:
        if ranks[url] > ranks[candidate]:
            candidate = url
            
    return candidate  